/*
    Copyright (C) 2024 Alvarado Ludwig & Martinez Juan JosÈ

    This file is part of Dao

    Dao is free software: you can redistribute it and/or modify it under the terms of the
    GNU General Public License as published by the Free Software Foundation, either version 3 of
    the License, or any later version.

    Dao is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
    without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See
    the GNU General Public License for more details.

    You should have received a copy of the GNU General Public License along with this program. If
    not, see <https://www.gnu.org/licenses/>.
 */
package edu.app.dao

import android.content.Context
import android.content.Intent
import android.net.ConnectivityManager
import android.net.NetworkCapabilities
import android.os.Bundle
import android.util.Log
import android.view.View
import android.view.Window
import android.widget.Button
import android.widget.Toast
import androidx.activity.OnBackPressedCallback
import androidx.activity.OnBackPressedDispatcher
import androidx.appcompat.app.AppCompatActivity
import androidx.compose.ui.graphics.Color
import androidx.core.content.ContextCompat
import edu.app.dao.databinding.WelcomeBinding
// La funci√≥n isOnline se llama desde el paquete de Funciones.kt y ah√≠ se encuentra, la pongo para simplificar c√≥digo
import edu.app.dao.funciones.isOnline

class WelcomeToApp : AppCompatActivity() {

    /*
        Declaraci√≥n del binding con el layout welcome
        El nombre WelcomeToAppLayoutBinding sale del archivo .xml
        mencionado anteriormente y se genera autom√°ticamente.
     */
    private lateinit var binding: WelcomeBinding
    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)

        onBackPressedDispatcher.addCallback(this, object : OnBackPressedCallback(true) {
            override fun handleOnBackPressed() {
            }
        })

        // Oculta una parte de arriba que se ve fe√≠sima (Barra de acci√≥n)
        supportActionBar?.hide()

        // Se utiliza el binding para inflar la vista y meterse como raiz
        binding = WelcomeBinding.inflate(layoutInflater)
        setContentView(binding.root)

        // Inicializa como variable el bot√≥n de iniciar sesi√≥n
        val botonLogin = binding.welcomeButtonLogin


        // Si est√° conectado a internet entonces pasa al Login, si no, imprime un aviso
        botonLogin.setOnClickListener {
            if (isOnline(this)) {
                val intent = Intent(this, LoginToApp::class.java)
                startActivity(intent)
            } else {
                Toast.makeText(this, "No est√°s conectado a internet!", Toast.LENGTH_SHORT).show()
            }
        }

        // Se accede al id del bot√≥n de inicio registrar a trav√©s del binding
        val botonRegistro = binding.welcomeButtonRegister

        // Si est√° conectado a internet entonces pasa al Register, si no, imprime un aviso
        botonRegistro.setOnClickListener {
            if (isOnline(this)) {
                val intent = Intent(this, RegisterToApp::class.java)
                startActivity(intent)
            } else {
                Toast.makeText(this, "No est√°s conectado a internet!", Toast.LENGTH_SHORT).show()
            }
        }
    }
}